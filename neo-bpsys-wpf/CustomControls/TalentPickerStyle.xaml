<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:control="clr-namespace:neo_bpsys_wpf.CustomControls"
    xmlns:cv="clr-namespace:neo_bpsys_wpf.Converters"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml">
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <cv:BooleanToReverseVisibilityConverter x:Key="BooleanToReverseVisibilityConverter" />
    <Style TargetType="{x:Type control:TalentPicker}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type control:TalentPicker}">
                    <ControlTemplate.Resources>
                        <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="ToggleButton">
                            <Setter Property="Height" Value="50" />
                            <Setter Property="Width" Value="50" />
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <ui:TextBox
                            Margin="0,10,0,10"
                            IsReadOnly="True"
                            PlaceholderText="角色名称"
                            Text="{TemplateBinding CharacterName}" />
                        <Grid Row="1">
                            <!--  Sur  -->
                            <StackPanel Margin="10,10,10,10" Visibility="{TemplateBinding IsTypeHun, Converter={StaticResource BooleanToReverseVisibilityConverter}}">
                                <ToggleButton
                                    Width="50"
                                    Height="50"
                                    HorizontalAlignment="Center"
                                    IsChecked="{Binding Player.Talent.FlywheelEffect, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                                    <Grid>
                                        <Image Source="{DynamicResource FlywheelEffect}" />
                                    </Grid>
                                </ToggleButton>
                                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                    <ToggleButton
                                        Width="50"
                                        Height="50"
                                        IsChecked="{Binding Player.Talent.KneeJerkReflex, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                                        <Grid>
                                            <Image Source="{DynamicResource KneeJerkReflex}" Visibility="{TemplateBinding IsTypeHun, Converter={StaticResource BooleanToReverseVisibilityConverter}}" />
                                        </Grid>
                                    </ToggleButton>
                                    <ToggleButton
                                        Width="50"
                                        Height="50"
                                        Margin="60,0,0,0"
                                        IsChecked="{Binding Player.Talent.BorrowedTime, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                                        <Grid>
                                            <Image Source="{DynamicResource BorrowedTime}" Visibility="{TemplateBinding IsTypeHun, Converter={StaticResource BooleanToReverseVisibilityConverter}}" />
                                        </Grid>
                                    </ToggleButton>
                                </StackPanel>
                                <ToggleButton
                                    Width="50"
                                    Height="50"
                                    HorizontalAlignment="Center"
                                    IsChecked="{Binding Player.Talent.TideTurner, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                                    <Grid>
                                        <Image Source="{DynamicResource TideTurner}" Visibility="{TemplateBinding IsTypeHun, Converter={StaticResource BooleanToReverseVisibilityConverter}}" />
                                    </Grid>
                                </ToggleButton>
                            </StackPanel>
                            <!--  Hun  -->
                            <StackPanel Margin="10,10,10,10" Visibility="{TemplateBinding IsTypeHun, Converter={StaticResource BoolToVisibilityConverter}}">
                                <ToggleButton
                                    Width="50"
                                    Height="50"
                                    HorizontalAlignment="Center"
                                    IsChecked="{Binding Player.Talent.ConfinedSpace, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                                    <Grid>
                                        <Image Source="{DynamicResource ConfinedSpace}" Visibility="{TemplateBinding IsTypeHun, Converter={StaticResource BoolToVisibilityConverter}}" />
                                    </Grid>
                                </ToggleButton>
                                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                    <ToggleButton
                                        Width="50"
                                        Height="50"
                                        IsChecked="{Binding Player.Talent.Insolence, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                                        <Grid>
                                            <Image Source="{DynamicResource Insolence}" Visibility="{TemplateBinding IsTypeHun, Converter={StaticResource BoolToVisibilityConverter}}" />
                                        </Grid>
                                    </ToggleButton>
                                    <ToggleButton
                                        Width="50"
                                        Height="50"
                                        Margin="60,0,0,0"
                                        IsChecked="{Binding Player.Talent.TrumpCard, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                                        <Grid>
                                            <Image Source="{DynamicResource TrumpCard}" Visibility="{TemplateBinding IsTypeHun, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                        </Grid>
                                    </ToggleButton>
                                </StackPanel>
                                <ToggleButton
                                    Width="50"
                                    Height="50"
                                    HorizontalAlignment="Center"
                                    IsChecked="{Binding Player.Talent.Detention, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                                    <Grid>
                                        <Image Source="{DynamicResource Detention}" Visibility="{TemplateBinding IsTypeHun, Converter={StaticResource BoolToVisibilityConverter}}" />
                                    </Grid>
                                </ToggleButton>
                            </StackPanel>
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsHighlighted}" Value="true">
                                            <Setter Property="Effect">
                                                <Setter.Value>
                                                    <DropShadowEffect
                                                        BlurRadius="15"
                                                        Opacity="0.8"
                                                        ShadowDepth="0"
                                                        Color="Gold" />
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
